// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: addDataClassify.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddDataClassifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据安全大脑的IP
	DscIp string `protobuf:"bytes,1,opt,name=dsc_ip,json=dscIp,proto3" json:"dsc_ip,omitempty"`
	// 数据安全大脑的前端账号
	DscFeAccount string `protobuf:"bytes,2,opt,name=dsc_fe_account,json=dscFeAccount,proto3" json:"dsc_fe_account,omitempty"`
	// 数据安全大脑的前端密码
	DscFePassword string `protobuf:"bytes,3,opt,name=dsc_fe_password,json=dscFePassword,proto3" json:"dsc_fe_password,omitempty"`
	// POC工具盒,也就是postgres所在机器的IP
	PostgreSQLIp string `protobuf:"bytes,4,opt,name=postgreSQL_ip,json=postgreSQLIp,proto3" json:"postgreSQL_ip,omitempty"`
}

func (x *AddDataClassifyRequest) Reset() {
	*x = AddDataClassifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addDataClassify_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDataClassifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDataClassifyRequest) ProtoMessage() {}

func (x *AddDataClassifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_addDataClassify_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDataClassifyRequest.ProtoReflect.Descriptor instead.
func (*AddDataClassifyRequest) Descriptor() ([]byte, []int) {
	return file_addDataClassify_proto_rawDescGZIP(), []int{0}
}

func (x *AddDataClassifyRequest) GetDscIp() string {
	if x != nil {
		return x.DscIp
	}
	return ""
}

func (x *AddDataClassifyRequest) GetDscFeAccount() string {
	if x != nil {
		return x.DscFeAccount
	}
	return ""
}

func (x *AddDataClassifyRequest) GetDscFePassword() string {
	if x != nil {
		return x.DscFePassword
	}
	return ""
}

func (x *AddDataClassifyRequest) GetPostgreSQLIp() string {
	if x != nil {
		return x.PostgreSQLIp
	}
	return ""
}

type AddDataClassifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	Meta string `protobuf:"bytes,2,opt,name=Meta,proto3" json:"Meta,omitempty"`
}

func (x *AddDataClassifyResponse) Reset() {
	*x = AddDataClassifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addDataClassify_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDataClassifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDataClassifyResponse) ProtoMessage() {}

func (x *AddDataClassifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_addDataClassify_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDataClassifyResponse.ProtoReflect.Descriptor instead.
func (*AddDataClassifyResponse) Descriptor() ([]byte, []int) {
	return file_addDataClassify_proto_rawDescGZIP(), []int{1}
}

func (x *AddDataClassifyResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *AddDataClassifyResponse) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

var File_addDataClassify_proto protoreflect.FileDescriptor

var file_addDataClassify_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2,
	0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x73, 0x63,
	0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x73, 0x63, 0x49, 0x70,
	0x12, 0x24, 0x0a, 0x0e, 0x64, 0x73, 0x63, 0x5f, 0x66, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x73, 0x63, 0x46, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x73, 0x63, 0x5f, 0x66, 0x65,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x73, 0x63, 0x46, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x5f, 0x69, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51,
	0x4c, 0x49, 0x70, 0x22, 0x41, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x32, 0x6c, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x52, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x79, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_addDataClassify_proto_rawDescOnce sync.Once
	file_addDataClassify_proto_rawDescData = file_addDataClassify_proto_rawDesc
)

func file_addDataClassify_proto_rawDescGZIP() []byte {
	file_addDataClassify_proto_rawDescOnce.Do(func() {
		file_addDataClassify_proto_rawDescData = protoimpl.X.CompressGZIP(file_addDataClassify_proto_rawDescData)
	})
	return file_addDataClassify_proto_rawDescData
}

var file_addDataClassify_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_addDataClassify_proto_goTypes = []interface{}{
	(*AddDataClassifyRequest)(nil),  // 0: proto.AddDataClassifyRequest
	(*AddDataClassifyResponse)(nil), // 1: proto.AddDataClassifyResponse
}
var file_addDataClassify_proto_depIdxs = []int32{
	0, // 0: proto.AddDataClassifyService.AddDataClassify:input_type -> proto.AddDataClassifyRequest
	1, // 1: proto.AddDataClassifyService.AddDataClassify:output_type -> proto.AddDataClassifyResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_addDataClassify_proto_init() }
func file_addDataClassify_proto_init() {
	if File_addDataClassify_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_addDataClassify_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDataClassifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_addDataClassify_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDataClassifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_addDataClassify_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_addDataClassify_proto_goTypes,
		DependencyIndexes: file_addDataClassify_proto_depIdxs,
		MessageInfos:      file_addDataClassify_proto_msgTypes,
	}.Build()
	File_addDataClassify_proto = out.File
	file_addDataClassify_proto_rawDesc = nil
	file_addDataClassify_proto_goTypes = nil
	file_addDataClassify_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AddDataClassifyServiceClient is the client API for AddDataClassifyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AddDataClassifyServiceClient interface {
	AddDataClassify(ctx context.Context, in *AddDataClassifyRequest, opts ...grpc.CallOption) (*AddDataClassifyResponse, error)
}

type addDataClassifyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAddDataClassifyServiceClient(cc grpc.ClientConnInterface) AddDataClassifyServiceClient {
	return &addDataClassifyServiceClient{cc}
}

func (c *addDataClassifyServiceClient) AddDataClassify(ctx context.Context, in *AddDataClassifyRequest, opts ...grpc.CallOption) (*AddDataClassifyResponse, error) {
	out := new(AddDataClassifyResponse)
	err := c.cc.Invoke(ctx, "/proto.AddDataClassifyService/AddDataClassify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddDataClassifyServiceServer is the server API for AddDataClassifyService service.
type AddDataClassifyServiceServer interface {
	AddDataClassify(context.Context, *AddDataClassifyRequest) (*AddDataClassifyResponse, error)
}

// UnimplementedAddDataClassifyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAddDataClassifyServiceServer struct {
}

func (*UnimplementedAddDataClassifyServiceServer) AddDataClassify(context.Context, *AddDataClassifyRequest) (*AddDataClassifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDataClassify not implemented")
}

func RegisterAddDataClassifyServiceServer(s *grpc.Server, srv AddDataClassifyServiceServer) {
	s.RegisterService(&_AddDataClassifyService_serviceDesc, srv)
}

func _AddDataClassifyService_AddDataClassify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDataClassifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddDataClassifyServiceServer).AddDataClassify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddDataClassifyService/AddDataClassify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddDataClassifyServiceServer).AddDataClassify(ctx, req.(*AddDataClassifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddDataClassifyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AddDataClassifyService",
	HandlerType: (*AddDataClassifyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddDataClassify",
			Handler:    _AddDataClassifyService_AddDataClassify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "addDataClassify.proto",
}
